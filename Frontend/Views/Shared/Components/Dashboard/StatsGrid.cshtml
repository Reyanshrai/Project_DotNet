@{
    // In a real application, these values would come from the backend
    var steps = 7500;
    var calories = 450;
    var heartRate = 72;
}

<div class="row">
    <div class="col-md-4 mb-4">
        <div class="card h-100">
            <div class="card-body d-flex align-items-center">
                <div class="rounded-circle bg-primary bg-opacity-10 p-3 me-3">
                    <i class="fas fa-shoe-prints fs-3 text-primary"></i>
                </div>
                <div>
                    <p class="text-muted mb-1">Daily Steps</p>
                    <h3 class="fw-bold mb-0">@steps.ToString("N0")</h3>
                    <p class="text-primary small mb-0">Goal: 10,000</p>
                </div>
            </div>
        </div>
    </div>
    
    <div class="col-md-4 mb-4">
        <div class="card h-100">
            <div class="card-body d-flex align-items-center">
                <div class="rounded-circle bg-warning bg-opacity-10 p-3 me-3">
                    <i class="fas fa-fire fs-3 text-warning"></i>
                </div>
                <div>
                    <p class="text-muted mb-1">Calories Burned</p>
                    <h3 class="fw-bold mb-0">@calories.ToString("N0")</h3>
                    <p class="text-warning small mb-0">Goal: 800</p>
                </div>
            </div>
        </div>
    </div>
    
    <div class="col-md-4 mb-4">
        <div class="card h-100">
            <div class="card-body d-flex align-items-center">
                <div class="rounded-circle bg-danger bg-opacity-10 p-3 me-3">
                    <i class="fas fa-heartbeat fs-3 text-danger"></i>
                </div>
                <div>
                    <p class="text-muted mb-1">Avg. Heart Rate</p>
                    <h3 class="fw-bold mb-0">@heartRate BPM</h3>
                    <p class="text-danger small mb-0">Last updated: Today</p>
                </div>
            </div>
        </div>
    </div>
</div> 